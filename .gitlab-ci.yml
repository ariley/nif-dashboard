image: "node:18"

stages:
  - build
  - deploy

variables:
  GIT_SSL_NO_VERIFY: "1"  # Disables SSL verification for git commands

before_script:
  - npm install -g npm@latest --unsafe-perm
  - npm cache clean --force
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > /tmp/ssh_private_key
  - chmod 600 /tmp/ssh_private_key
  - ssh-add /tmp/ssh_private_key
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan -H $VM_IPADDRESS >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

npm_install:
  stage: build
  script:
    - rm -rf node_modules  # Clean node_modules directory
    - npm install  # Install dependencies using npm install
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

deploy:
  stage: deploy
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > /tmp/ssh_private_key
    - chmod 600 /tmp/ssh_private_key
    - ssh-add /tmp/ssh_private_key
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $VM_IPADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - scp package.json $SSH_USER@$VM_IPADDRESS:/tmp/package.json
    - scp package-lock.json $SSH_USER@$VM_IPADDRESS:/tmp/package-lock.json
  script:
    - ssh $SSH_USER@$VM_IPADDRESS "
        echo 'Debugging environment variables and paths:' &&
        echo 'NVM_DIR='$NVM_DIR &&
        ls -la \$HOME/.nvm &&
        ls -la /var/www/html &&
        cat /tmp/package.json &&
        cat /tmp/package-lock.json
      "
    - ssh $SSH_USER@$VM_IPADDRESS "
        sudo rm -rf /var/www/html/node_modules &&
        sudo cp /tmp/package.json /var/www/html &&
        sudo cp /tmp/package-lock.json /var/www/html &&
        cd /var/www/html &&
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash &&
        export NVM_DIR=\"\$HOME/.nvm\" &&
        [ -s \"\$NVM_DIR/nvm.sh\" ] && . \"\$NVM_DIR/nvm.sh\" &&
        nvm install 18 &&
        nvm use 18 &&
        npm install -g npm@latest --unsafe-perm &&
        npm cache clean --force &&
        npm install --unsafe-perm &&
        npm install -g astro@latest --unsafe-perm &&
        npm run build --unsafe-perm
      "
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
