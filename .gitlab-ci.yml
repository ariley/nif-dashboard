stages:
  - install
  - build
  - deploy

# Use the official Node.js image with the version you need for Astro.js
image: wci-repo.llnl.gov:4567/lwds/node:18

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/  # Cache node_modules between stages

install:
  stage: install
  script:
    - npm ci # Clean install dependencies
  cache:
    paths:
      - node_modules/
  artifacts:
    paths:
      - node_modules/ # Persist node_modules to the next stage

build:
  stage: build
  script:
    - npm run build # Run Astro's build command
  cache:
    paths:
      - node_modules/ # Ensure cache is also available during the build
  artifacts:
    paths:
      - dist/ # Ensure the built files are saved as artifacts
      - node_modules/ # Persist node_modules to the next stage

deploy:
  stage: deploy
  script:
      # Install Node.js 18 using nvm
    - nvm install 18
    - nvm use 18
    - nvm alias default 18
    - cp -r dist/* /var/www/vhosts/nif-dashboard/ # Copy build files to the server
    - cp -r node_modules /var/www/vhosts/nif-dashboard/ # Ensure dependencies are deployed
    - sudo chmod -R 755 /var/www/vhosts/nif-dashboard/
    - sudo chgrp -R apache /var/www/vhosts/nif-dashboard/

    # Add command to run the Express server and log output
    - sudo nohup node /var/www/vhosts/nif-dashboard/scripts/server.mjs > /var/www/vhosts/nif-dashboard/server.log 2>&1 &

  cache:
    paths:
      - node_modules/ # Use the cached node_modules
  environment:
    name: production
    url: https://nif-dashboard.llnl.gov/
  needs:
    - build
  tags:
    - production
