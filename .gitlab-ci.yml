image: "node:18"

stages:
  - cleanup
  - build
  - deploy

variables:
  GIT_SSL_NO_VERIFY: "1"  # Disables SSL verification for git commands

before_script:
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > /tmp/ssh_private_key
  - chmod 600 /tmp/ssh_private_key
  - ssh-add /tmp/ssh_private_key
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan -H $VM_IPADDRESS >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  - export NVM_DIR="$HOME/.nvm"
  - bash -c "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash"
  - bash -c "source $NVM_DIR/nvm.sh"
  - nvm install 18
  - nvm use 18
  - node -v

cleanup:
  stage: cleanup
  script:
    - rm -rf node_modules
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

npm_install:
  stage: build
  script:
    - npm install -g npm@latest --unsafe-perm
    - npm cache clean --force
    - rm -rf node_modules  # Clean node_modules directory
    - npm ci  # Install dependencies using npm ci
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_MERGE_REQUEST_ID

ddeploy:
  stage: deploy
  script:
    - scp package.json $SSH_USER@$VM_IPADDRESS:/tmp/package.json
    - scp package-lock.json $SSH_USER@$VM_IPADDRESS:/tmp/package-lock.json
    - ssh $SSH_USER@$VM_IPADDRESS "export NVM_DIR=\"$HOME/.nvm\" && \
        [ -s \"$NVM_DIR/nvm.sh\" ] && \. \"$NVM_DIR/nvm.sh\" && \
        nvm use 18 && \ sudo rm -rf /var/www/html/node_modules && sudo cp /tmp/package.json /var/www/html && sudo cp /tmp/package-lock.json /var/www/html && cd /var/www/html && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash && source ~/.nvm/nvm.sh && nvm install 18 && nvm alias default 18 && nvm use 18 && sudo npm install -g npm@latest --unsafe-perm && sudo npm cache clean --force && sudo npm install --unsafe-perm && sudo npm install -g astro@latest --unsafe-perm && sudo npm run build --unsafe-perm"
  artifacts:
    paths:
      - public
  only:
    - main
