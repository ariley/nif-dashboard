image: "docker:latest"

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2

stages:
  - cleanup
  - build
  - deploy

cleanup:
  stage: cleanup
  script:
    - docker system prune -a -f --volumes

build:
  stage: build
  image: node:18
  before_script:
    - npm install -g npm@latest --unsafe-perm
    - npm cache clean --force
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > /tmp/ssh_private_key
    - chmod 600 /tmp/ssh_private_key
    - ssh-add /tmp/ssh_private_key
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $VM_IPADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - rm -rf node_modules
    - npm ci
    - ssh $SSH_USER@$VM_IPADDRESS "hostname && echo 'Welcome!!!' > welcome.txt"
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_MERGE_REQUEST_ID

deploy:
  stage: deploy
  before_script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY_BASE64" | base64 -d > /tmp/ssh_private_key
    - chmod 600 /tmp/ssh_private_key
    - ssh-add /tmp/ssh_private_key
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $VM_IPADDRESS >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - scp package.json $SSH_USER@$VM_IPADDRESS:/tmp/package.json
    - scp package-lock.json $SSH_USER@$VM_IPADDRESS:/tmp/package-lock.json
  script:
    - ssh $SSH_USER@$VM_IPADDRESS "sudo rm -rf /var/www/html/node_modules && sudo cp /tmp/package.json /var/www/html && sudo cp /tmp/package-lock.json /var/www/html && cd /var/www/html && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash && source ~/.nvm/nvm.sh && nvm install 18 && nvm use 18 && npm install -g npm@latest --unsafe-perm && npm cache clean --force && npm ci --unsafe-perm && npm install -g astro@latest --unsafe-perm && npm run build --unsafe-perm"
  artifacts:
    paths:
      - public
  only:
    - main
